
Data

Table: metadata
---------------------------------------------
| path          |                           |
| uid           |                           |
| gid           |                           |
| permissions   | rwxrwxrwx                 |
| created       | YYYY-MM-DD HH:mm:ss.f     |
| accessed      | YYYY-MM-DD HH:mm:ss.f     |
| modified      | YYYY-MM-DD HH:mm:ss.f     |
---------------------------------------------

Table: userdata
---------------------------------
| uid       |                   |
| gid       |                   |
| password  | sha256 hashed     |
---------------------------------

========================================

http://www.ucblueash.edu/thomas/Intro_Unix_Text/TOC.html
http://www.comptechdoc.org/os/linux/howlinuxworks/linux_hllogin.html

Startup

ROM -> RAM
bootloader
system kernel
mem check
init process
    sets sys states
    login
        sets uid, gid
        starts /etc/passwd startup application

System Start
    startup.py
    login.py
        interpreter.py
            STUFF
    shutdown.py

--- System ------------------------
| --- Login --------------------- |
| | --- <Shell> --------------- | |
| | |                         | | |
| | |          STUFF          | | |
| | |                         | | |
| | --------------------------- | |
| ------------------------------- |
-----------------------------------

                                                            ---> Process <------
                                                           /                   |
Filesystem Driver -----> System <---> Kernel <--------------------> Shell <-----
Display Driver      --/                         \--> syscalls --/


/etc/passwd (: delimited)
---------------------------------------------------------
| username      |                                       |
| password      | random length encrypted (if not 'x')  |
| uid           |                                       |
| gid           |                                       |
| text info     | name, dept, etc (optional fields)     |
| login dir     |                                       |
| startup app   |                                       |
---------------------------------------------------------

========================================

Processes

PCB
---------------
| pid         |
| ppid        |
| owner       |
| priority    |
| state       |
---------------

========================================

Directories

/
|++ programs
|   |-- alias.py
|   |-- cat.py
|   |-- cp.py
|   `-- ...
|++ documents
|   |++ <USER0>
|   |++ <USER1>
|   `++ ...
|++ data
|   |-- passwd
|   |-- data
|   `-- system.py
`++ kernel
    |-- constants.py
    |-- filesystem.py
    `-- ...

# TODO
/
|++ bin
|   |-- alias.py
|   |-- cat.py
|   |-- cp.py
|   `-- ...
|++ home
|   |++ <USER0>
|   |++ <USER1>
|   `++ ...
|++ etc
|   |-- passwd
|   |-- data
|   `-- system.py
|++ dev
|   |-- null
|   `-- ...
`++ kernel
    |-- constants.py
    |-- filesystem.py
    `-- ...

========================================

Programs

Required functions

run(shell, args)
    arguments
        shell
            a Shell instance from /kernel/shell.py
        args
            a list of all the input from the interpreter split on spaces
    return
        None
        # TODO
        status codes

help()
    return
        string of help info

========================================

drivers
    system
        abs_path
        rel_path
        exists
        is_file
        is_directory
        copy
        remove
        move
        join_path
        get_size
        list_dir
    filesystem
        directories
        files
    database
        create
        add
        delete
    display
        write
        ouput

filesystem
    .path
        abs
        rel
        iabs
        irel
        join
        split
        dir_name
        base_name

    #require permission
    open_file
    open_program
    move
    copy
    remove
    make_dir

    exists
    is_file
    is_directory

    list_dir
    list_glob
    list_all

# used to abstract permissions
syscalls

========================================

Path


Metadata
    get_meta_data(path) -> (path, owner, permission, created, accessed, modifed)
    get_all_meta_data(path='/') -> list(get_meta_data)

    add_path(path, owner, permission)
    copy_path(src, dest)
    move_path(src, dest)
    delete_path(path)

    calc_permission_string(number) -> "rwxrwxrwx"
    calc_permission_number(string) -> "777"
    get_permission_string(path) -> "rwxrwxrwx"
    get_permission_number(path) -> "777"
    set_permission(path, value)
    set_permission_string(path, value)
    set_permission_number(path, value)

    get_time(path) -> (created, accessed, modifed)
    set_time(path, value=None)
    set_time_string(path, value=None)
    set_time_list(path, value=None)
    set_time_dict(path, value=None)

    get_owner(path) -> owner
    set_owner(path, owner)


Userdata
    get_user_data(user) -> (user, uid, gid, info, homedir, shell, password)
    get_all_user_data() -> list(get_user_data)

    add_user(user, uid, gid, info, homedir, shell, password=None)
    delete_user(user)

    get_user(uid) -> user
    get_uid(user) -> uid
    set_uid(user, value)

    get_group(user) -> group
    get_gid(user) -> gid
    set_gid(user, value)

    get_info(user) -> info
    set_info(user, value)

    get_homedir(user) -> uid
    set_homedir(user, value)

    get_shell(user) -> shell
    set_shell(user, value)

    get_password(user) -> password
    set_password(user, value)
